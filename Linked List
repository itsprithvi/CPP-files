#include<iostream>

using namespace std;
//To create class node and its attributes
class Node {
public:
    int data;
    Node* next;
    Node(int value) {
        data=value;
        next=nullptr;
    }
};
Node* head=nullptr;


//Insert At Beginning Function
void InsertAtBegin(int value) {
    Node* newNode = new Node(value);
    if(head==nullptr) {
        newNode->next = nullptr;
        head=newNode;
        return;
    }
    else {
        newNode->next=head;
        head=newNode;
    }
    cout << "Element " << value << " inserted at the beginning " << endl;
    return;
}

//Insert Element At given position
void InsertAtPos(int pos, int value) {
   Node* newNode = new Node(value);
   Node* temp = head;
   for(int i=1;i<=pos-1;i++){
        temp = temp -> next;
        if(temp==nullptr){
           cout << "There is no such position !" << endl;
           return;
        }
   }
   newNode -> next = temp -> next;
   temp -> next = newNode;
}

//Delete At given Position
void DeleteAtPos(int pos) {
    Node* temp=head;
    Node* prev;
    for(int i=1; i<=pos; i++) {
        prev=temp;
        temp=temp->next;
    }
    prev->next=temp->next;
    free(temp);
    return;
}

//Delete the element at last
void DeleteAtLast() {
    Node* temp=head;
    while(temp->next->next != nullptr) {
        temp = temp->next;
    }
    delete(temp->next);
    temp->next=nullptr;
    return;
}

//Add Element at Last
void AddAtLast(int value) {
    Node* newNode = new Node(value);
    Node* temp = head;
    while(temp->next != nullptr) {
        temp=temp->next;
    }
    temp->next=newNode;
}

//Display All Elements
void Display() {
    Node* temp = head;
    while(temp != nullptr) {
        cout << temp->data << " ";
        temp=temp->next;
    }
    cout << endl;
    return;
}

//Main function
int main() {
    int value, choice, pos;
    bool flag=true;
    while(flag) {
    cout << "----------Linked List----------" << endl;
    cout << "1.Insert At Beginning : " << endl;
    cout << "2.Insert At Given Position : " << endl;
    cout << "3.Delete At Given Position : " << endl;
    cout << "4.Insert At Last Position : " << endl;
    cout << "5.Delete At Last Position : " << endl;
    cout << "6.Display : " << endl;
    cout << "7.Exit : " << endl;

    cin >> choice;

    //Use switch statement to do certain function

        switch(choice) {
        case 1:
            cout << "Enter the Element to insert at beginning : " << endl;
            cin >> value;
            InsertAtBegin(value);
            break;
        case 2:
            cout << "Enter the element and pos : " << endl;
            cin >> pos >> value;
            InsertAtPos(pos, value);
            break;
        case 3:
            cout << "Enter the pos to delete : " << endl;
            cin >> pos;
            DeleteAtPos(pos);
            break;
        case 4:
            cout << "Enter the element to add at last : " << endl;
            cin >> value;
            AddAtLast(value);
            break;
        case 5:
            DeleteAtLast();
            break;
        case 6:
            Display();
            break;
        case 7:
            cout << "Exiting From Linked List !!! " << endl;
            flag=false;
            break;
        }

    }
    return 0;
}
